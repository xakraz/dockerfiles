#!/usr/bin/env bash
#
#
# == Bash options
#
set -o errexit
set -o pipefail
set -o nounset



# == Variables
#
if [[ $(uname -s) == "Darwin" ]] ; then
  SCRIPT_NAME=$(basename $(readlink ${BASH_SOURCE[0]}))
else
  SCRIPT_NAME=$(basename $(readlink -e ${BASH_SOURCE[0]}))
fi

DOCKER_REGISTRY=''    # Docker Hub
DOCKER_REPOSITORY='peterdavehello'                  # Docker Library images
DOCKER_IMAGE_NAME='npm-doctoc'
DOCKER_IMAGE_VERSION='latest'

docker_args='--rm --log-driver=none'
docker_env_vars=''
docker_cmd="$@"



# == Compute config
#
(>&2 echo "===> ${SCRIPT_NAME}: Start")


# === Docker
#
docker_image=''

# Manage Docker Hub
[[ -n "${DOCKER_REGISTRY}" ]] \
  && docker_image="${DOCKER_REGISTRY}/"

# Manage Library repos
[[ -n "${DOCKER_REPOSITORY}" ]] \
  && docker_image="${docker_image}${DOCKER_REPOSITORY}/"

# Compute full image name
docker_image="${docker_image}${DOCKER_IMAGE_NAME}"
docker_image="${docker_image}:${DOCKER_IMAGE_VERSION}"

# Option to shell out
if [[ 'shell' == "$@" ]]; then
  docker_args="${docker_args} --entrypoint /bin/sh -it"
  docker_cmd=''
else
  docker_args="${docker_args} --entrypoint /usr/local/bin/doctoc -it"
fi


# Run the container as the user
docker_args="${docker_args} --name ${SCRIPT_NAME}-$(uuidgen)"
docker_args="${docker_args} --user $(id -u)"
docker_args="${docker_args} --env HOME=${HOME}"
docker_args="${docker_args} --volume=/etc/passwd:/etc/passwd:ro"
docker_args="${docker_args} --volume=/etc/group:/etc/group:ro"
docker_args="${docker_args} --volume=/etc/shadow:/etc/shadow:ro"

#
docker_args="${docker_args} --volume=$(pwd):$(pwd)"
docker_args="${docker_args} --workdir=$(pwd)"


# == Main
#
(>&2 echo "===> ${SCRIPT_NAME}: Run")

# === Docker Run
#
docker run \
  ${docker_args} \
  ${docker_env_vars} \
  ${docker_image} \
  ${docker_cmd}


(>&2 echo "===> ${SCRIPT_NAME}: Done")
